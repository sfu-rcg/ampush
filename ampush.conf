[default]

; these need to be created manually
am_container_default     = CN=automounts,OU=Unix,DC=ad,DC=example,DC=com
flat_file_map_dir        = /path/to/flat_file_nis_automount_maps


; You can push automounts to multiple containers by specifying e.g.,
;    ampush --mode cluster_nodes
; and defining e.g.,:
;    am_container_cluster_nodes = CN=automounts-cluster,DC=example,DC=com
; You can munge your flat file automount maps in flight before pushing
; them to alternate containers by adding your own code to
; amlib/hook.py:munge_map().


; (seconds) higher values = less chance of creating CNF* objects
replication_wait_time = 0.5


; user serviceable parts
ad_domain         = ad.example.com

; You should create and use a limited privilege user to manage
; the automount container. We are NOT RESPONSIBLE if you don't
; listen to this advice and you accidentally delete your whole AD
; with this script.
am_user           = ampusher
am_pass           =

main_loglevel     = 20
main_logfile      = /var/log/ampush.log
; ERROR      40
; WARNING    30
; INFO       20
; DEBUG      10


; probably best to leave these alone
t_nisobj          = nisObject
t_nismap          = nisMap
master_map_name   = auto.master
direct_map_name   = auto.direct
